39F77D0601FEFFC7EBF6E988000000415455BE020000005389FB400FBEFF41BC:
  0. 00 0000 012E 0000:somefunc1 000F:dothings 0097:somefunc2 00A6:dootherthings
FFC7400FBE:
  C78D7C4704400FBEC783C0038D044001C7B8........4080FF6174:
    0. 06 52C1 007D 0000:idonthaveareffunc 003E:iamareffunc 0076:__getanum
  FFE9:
    0. 00 0000 000B 0000:ihaveareffunc (REF 0007: iamareffunc)


39F77D0601FEFFC7EBF6E988000000415455BE020000005389FB400FBEFF41BC 00 0000 012E 
:0000 somefunc1 
:0097 somefunc2 
:000F dothings 
:00A6 dootherthings ........E8........01C380FB61741C80FB6241BC........741184DB41BC........B8........4C0F44E031ED80FB617511BE0400000089EFE8........8D5861EB2480FB627511BE0500000089EFE8........8D5862EB0EBE0600000089EFE8........01C3FFC583FD0575BF4C89E05B5D415CC339F77E0601F7FFC6EBF6E95AFFFFFF415455BE020000005389FB400FBEFF41BC........E8........01C380FB61741C80FB6241BC........741184DB41BC........B8........4C0F44E031ED80FB617511BE0400000089EFE8........8D5861EB2480FB627511BE0500000089EFE8........8D5862EB0EBE0600000089EFE8........01C3FFC583FD0575BF4C89E05B5D415CC3
FFC7400FBEC78D7C4704400FBEC783C0038D044001C7B8........4080FF6174 06 52C1 007D 
:0000 idonthaveareffunc 
:003E iamareffunc 
:0076 __getanum 
^006C .LC5 ........74114084FFBA........B8........480F45C2C3B224B17BB0714080FF6175054088C7EB0D8D34174080FF620F44F14088F783C00483C10583C2063C8575DB40883D........B8........C38D04370FAFC6C3
FFC7400FBEFFE9.................................................. 00 0000 000B 
:0000 ihaveareffunc 
^0007 iamareffunc 
---


class FlirtFeatureFlag(object):
    FEATURE_STARTUP       = 0x01
    FEATURE_CTYPE_CRC     = 0x02
    FEATURE_2BYTE_CTYPE   = 0x04
    FEATURE_ALT_CTYPE_CRC = 0x08
    FEATURE_COMPRESSED    = 0x10


class FlirtParseFlag(object):
    PARSE_MORE_PUBLIC_NAMES          = 0x01
    PARSE_READ_TAIL_BYTES            = 0x02
    PARSE_READ_REFERENCED_FUNCTIONS  = 0x04
    PARSE_MORE_MODULES_WITH_SAME_CRC = 0x08
    PARSE_MORE_MODULES               = 0x10


class FlirtFunctionFlag(object):
    FUNCTION_LOCAL = 0x02                 # describes a static function
    FUNCTION_UNRESOLVED_COLLISION = 0x08  # describes a collision that wasn't resolved
    
    
    
def read_max_2_bytes(f):
    b = binrw.read_u8(f)
    if b & 0x80 == 0x80:
        return ((b & 0x7F) << 8) | binrw.read_u8(f)
    else:
        return b


def read_multiple_bytes(f):
    b = binrw.read_u8(f)
    if b & 0x80 != 0x80:
        return b
    elif b & 0xC0 != 0xC0:
        return ((b & 0x7F) << 8) | binrw.read_u8(f)
    elif b & 0xE0 != 0xE0:
        return ((b & 0x3F) << 24) | binrw.read_u24be(f)
    else:
        return binrw.read_u32be(f)


def read_node_variant_mask(f, length):
    if length < 0x10:
        return read_max_2_bytes(f)
    elif length <= 0x20:
        return read_multiple_bytes(f)
    elif length <= 0x40:
        return (read_multiple_bytes(f) << 32) | read_multiple_bytes(f)
    else:
        raise FlirtException('Wrong node variant mask length: {}'.format(length))


import angr, logging, nampa
logging.getLogger('angr.analyses.sigscan').setLevel(logging.DEBUG)
logging.getLogger('nampa.flirt').setLevel(logging.DEBUG)
logging.getLogger('nampa.flirt_match').setLevel(logging.DEBUG)
lbinpath = '/home/slavoie/code/lscan/amd64/bin/bin-libc-2.22'
lsigpath = '/home/slavoie/code/lscan/amd64/sig/libc-2.22.sig'
cbinpath = '/home/slavoie/code/mishmash/c/libreftest/usesomelib'
bbinpath = '/home/slavoie/code/mishmash/c/libreftest/usesomelib-stripped'
bcsigpath = '/home/slavoie/code/mishmash/c/libreftest/somelib.sig'
b = angr.Project(bbinpath, load_options={'auto_load_libs':False})
c = angr.Project(cbinpath, load_options={'auto_load_libs':False})
#l = angr.Project(lbinpath, load_options={'auto_load_libs':False})
#ll=b.kb.get_plugin('labels')
#print 'Label count: %d' % len(l._labels)
#print 'Reverse label count: %d' % len(l._reverse_labels)
bcfg = b.analyses.CFGFast()
ccfg = c.analyses.CFGFast()
#lcfg = l.analyses.CFGFast()
#print 'Label count: %d' % len(l._labels)
#print 'Reverse label count: %d' % len(l._reverse_labels)
bscan = b.analyses.SigScan(method='flirt', sigpath=bcsigpath, use_kb=True, use_sym=True, rename=False)
cscan = c.analyses.SigScan(method='flirt', sigpath=bcsigpath, use_kb=True, use_sym=True, rename=False)
